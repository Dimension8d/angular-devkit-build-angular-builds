"use strict";
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular-devkit/core");
const normalize_asset_patterns_1 = require("./normalize-asset-patterns");
const normalize_file_replacements_1 = require("./normalize-file-replacements");
const normalize_optimization_1 = require("./normalize-optimization");
const normalize_source_maps_1 = require("./normalize-source-maps");
function normalizeKarmaSchema(host, root, projectRoot, sourceRoot, options) {
    const syncHost = new core_1.virtualFs.SyncDelegateHost(host);
    const normalizedSourceMapOptions = normalize_source_maps_1.normalizeSourceMaps(options.sourceMap || false);
    normalizedSourceMapOptions.vendor =
        normalizedSourceMapOptions.vendor || options.vendorSourceMap || false;
    return Object.assign({}, options, { fileReplacements: normalize_file_replacements_1.normalizeFileReplacements(options.fileReplacements || [], syncHost, root), assets: normalize_asset_patterns_1.normalizeAssetPatterns(options.assets || [], syncHost, root, projectRoot, sourceRoot), sourceMap: normalizedSourceMapOptions, optimization: normalize_optimization_1.normalizeOptimization(undefined) });
}
exports.normalizeKarmaSchema = normalizeKarmaSchema;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ybWFsaXplLWthcm1hLXNjaGVtYS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsicGFja2FnZXMvYW5ndWxhcl9kZXZraXQvYnVpbGRfYW5ndWxhci9zcmMvdXRpbHMvbm9ybWFsaXplLWthcm1hLXNjaGVtYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7Ozs7OztHQU1HOztBQUdILCtDQUF1RDtBQUd2RCx5RUFBb0U7QUFDcEUsK0VBR3VDO0FBQ3ZDLHFFQUFpRTtBQUNqRSxtRUFBOEQ7QUFZOUQsU0FBZ0Isb0JBQW9CLENBQ2xDLElBQXdCLEVBQ3hCLElBQVUsRUFDVixXQUFpQixFQUNqQixVQUE0QixFQUM1QixPQUEyQjtJQUUzQixNQUFNLFFBQVEsR0FBRyxJQUFJLGdCQUFTLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFdEQsTUFBTSwwQkFBMEIsR0FBRywyQ0FBbUIsQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLEtBQUssQ0FBQyxDQUFDO0lBQ25GLDBCQUEwQixDQUFDLE1BQU07UUFDL0IsMEJBQTBCLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxlQUFlLElBQUksS0FBSyxDQUFDO0lBRXhFLHlCQUNLLE9BQU8sSUFDVixnQkFBZ0IsRUFBRSx1REFBeUIsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsRUFDM0YsTUFBTSxFQUFFLGlEQUFzQixDQUFDLE9BQU8sQ0FBQyxNQUFNLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxFQUM3RixTQUFTLEVBQUUsMEJBQTBCLEVBQ3JDLFlBQVksRUFBRSw4Q0FBcUIsQ0FBQyxTQUFTLENBQUMsSUFDOUM7QUFDSixDQUFDO0FBcEJELG9EQW9CQyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5cbmltcG9ydCB7IFBhdGgsIHZpcnR1YWxGcyB9IGZyb20gJ0Bhbmd1bGFyLWRldmtpdC9jb3JlJztcbmltcG9ydCB7IEFzc2V0UGF0dGVybkNsYXNzLCBPcHRpbWl6YXRpb25DbGFzcywgU291cmNlTWFwQ2xhc3MgfSBmcm9tICcuLi9icm93c2VyL3NjaGVtYSc7XG5pbXBvcnQgeyBTY2hlbWEgYXMgS2FybWFCdWlsZGVyU2NoZW1hIH0gZnJvbSAnLi4va2FybWEvc2NoZW1hJztcbmltcG9ydCB7IG5vcm1hbGl6ZUFzc2V0UGF0dGVybnMgfSBmcm9tICcuL25vcm1hbGl6ZS1hc3NldC1wYXR0ZXJucyc7XG5pbXBvcnQge1xuICBOb3JtYWxpemVkRmlsZVJlcGxhY2VtZW50LFxuICBub3JtYWxpemVGaWxlUmVwbGFjZW1lbnRzLFxufSBmcm9tICcuL25vcm1hbGl6ZS1maWxlLXJlcGxhY2VtZW50cyc7XG5pbXBvcnQgeyBub3JtYWxpemVPcHRpbWl6YXRpb24gfSBmcm9tICcuL25vcm1hbGl6ZS1vcHRpbWl6YXRpb24nO1xuaW1wb3J0IHsgbm9ybWFsaXplU291cmNlTWFwcyB9IGZyb20gJy4vbm9ybWFsaXplLXNvdXJjZS1tYXBzJztcblxuLyoqXG4gKiBBIG5vcm1hbGl6ZWQgd2VicGFjayBzZXJ2ZXIgYnVpbGRlciBzY2hlbWEuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTm9ybWFsaXplZEthcm1hQnVpbGRlclNjaGVtYSBleHRlbmRzIEthcm1hQnVpbGRlclNjaGVtYSB7XG4gIHNvdXJjZU1hcDogU291cmNlTWFwQ2xhc3M7XG4gIGZpbGVSZXBsYWNlbWVudHM6IE5vcm1hbGl6ZWRGaWxlUmVwbGFjZW1lbnRbXTtcbiAgYXNzZXRzOiBBc3NldFBhdHRlcm5DbGFzc1tdO1xuICBvcHRpbWl6YXRpb246IE9wdGltaXphdGlvbkNsYXNzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplS2FybWFTY2hlbWEoXG4gIGhvc3Q6IHZpcnR1YWxGcy5Ib3N0PHt9PixcbiAgcm9vdDogUGF0aCxcbiAgcHJvamVjdFJvb3Q6IFBhdGgsXG4gIHNvdXJjZVJvb3Q6IFBhdGggfCB1bmRlZmluZWQsXG4gIG9wdGlvbnM6IEthcm1hQnVpbGRlclNjaGVtYSxcbik6IE5vcm1hbGl6ZWRLYXJtYUJ1aWxkZXJTY2hlbWEge1xuICBjb25zdCBzeW5jSG9zdCA9IG5ldyB2aXJ0dWFsRnMuU3luY0RlbGVnYXRlSG9zdChob3N0KTtcblxuICBjb25zdCBub3JtYWxpemVkU291cmNlTWFwT3B0aW9ucyA9IG5vcm1hbGl6ZVNvdXJjZU1hcHMob3B0aW9ucy5zb3VyY2VNYXAgfHwgZmFsc2UpO1xuICBub3JtYWxpemVkU291cmNlTWFwT3B0aW9ucy52ZW5kb3IgPVxuICAgIG5vcm1hbGl6ZWRTb3VyY2VNYXBPcHRpb25zLnZlbmRvciB8fCBvcHRpb25zLnZlbmRvclNvdXJjZU1hcCB8fCBmYWxzZTtcblxuICByZXR1cm4ge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgZmlsZVJlcGxhY2VtZW50czogbm9ybWFsaXplRmlsZVJlcGxhY2VtZW50cyhvcHRpb25zLmZpbGVSZXBsYWNlbWVudHMgfHwgW10sIHN5bmNIb3N0LCByb290KSxcbiAgICBhc3NldHM6IG5vcm1hbGl6ZUFzc2V0UGF0dGVybnMob3B0aW9ucy5hc3NldHMgfHwgW10sIHN5bmNIb3N0LCByb290LCBwcm9qZWN0Um9vdCwgc291cmNlUm9vdCksXG4gICAgc291cmNlTWFwOiBub3JtYWxpemVkU291cmNlTWFwT3B0aW9ucyxcbiAgICBvcHRpbWl6YXRpb246IG5vcm1hbGl6ZU9wdGltaXphdGlvbih1bmRlZmluZWQpLFxuICB9O1xufVxuIl19